name: Python CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # 安装 Poetry
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    # 使用 Poetry 安装依赖（包含 dev 依赖）
    - name: Install dependencies with Poetry
      run: |
        poetry install --with dev

    # 代码格式检查
    - name: Run black code formatter
      run: |
        poetry run black --check .

    # 单元测试
    - name: Run pytest
      run: |
        poetry run pytest -v

    # 方案一：使用 pdoc3（修复 distutils 依赖）
    - name: Generate API documentation with pdoc3
      run: |
        # 升级 pdoc3 到最新版
        poetry run pip install --upgrade pdoc3

        # 临时修复 distutils 依赖（适用于旧版本 pdoc3）
        if ! poetry run pdoc --version | grep -q "pdoc3 1.8"; then
          sed -i 's/from distutils.sysconfig import get_python_lib/from setuptools import distutils\nfrom distutils.sysconfig import get_python_lib/g' "$(poetry env info -p)/lib/python3.12/site-packages/pdoc/cli.py"
        fi

        # 生成文档
        poetry run pdoc --html --output-dir docs pygraph

    # 方案二：备用方案 - 使用 Sphinx 生成文档（推荐长期方案）
    - name: Generate documentation with Sphinx (fallback)
      if: failure()
      run: |
        # 安装 Sphinx
        poetry add -D sphinx sphinx-rtd-theme

        # 初始化 Sphinx 项目
        mkdir -p docs/source
        poetry run sphinx-quickstart -q -p pygraph -a "Your Name" -v 1.0 -r 1.0 -d -l en -p docs/source

        # 配置 Sphinx 指向项目代码
        sed -i 's/^# import os/# import os/g' docs/source/conf.py
        sed -i 's/^# import sys/# import sys/g' docs/source/conf.py
        sed -i 's/^# sys.path.insert(0, os.path.abspath(\'..\'))/sys.path.insert(0, os.path.abspath(\'..\'))/g' docs/source/conf.py
        sed -i 's/^html_theme = \'alabaster\'/html_theme = \'sphinx_rtd_theme\'/g' docs/source/conf.py

        # 添加自动文档生成配置
        echo ".. automodule:: pygraph\n   :members:\n   :undoc-members:\n   :show-inheritance:" > docs/source/pygraph.rst

        # 生成文档
        poetry run sphinx-build -b html docs/source docs/build

        # 输出文档路径（可选）
        echo "Documentation generated at docs/build"
